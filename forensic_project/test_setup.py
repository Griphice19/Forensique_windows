# test_setup.py - V√©rification de l'installation des biblioth√®ques

import sys
print("=== Test d'installation des biblioth√®ques forensiques ===\n")

# Liste des biblioth√®ques √† tester
libraries = [
    ("psutil", "Informations syst√®me et processus"),
    ("win32evtlog", "Journaux d'√©v√©nements Windows"),
    ("wmi", "Windows Management Instrumentation"),
    ("winreg", "Acc√®s au registre Windows"),
    ("cryptography", "Chiffrement des donn√©es"),
    ("requests", "Requ√™tes HTTP"),
    ("pandas", "Manipulation de donn√©es"),
    ("yaml", "Configuration YAML"),
    ("json", "Traitement JSON"),
]

success_count = 0
total_count = len(libraries)

for lib_name, description in libraries:
    try:
        if lib_name == "win32evtlog":
            import win32evtlog
        elif lib_name == "winreg":
            import winreg
        elif lib_name == "cryptography":
            from cryptography.fernet import Fernet
        elif lib_name == "yaml":
            import yaml
        else:
            __import__(lib_name)
        
        print(f"‚úÖ {lib_name:<15} - {description}")
        success_count += 1
        
    except ImportError as e:
        print(f"‚ùå {lib_name:<15} - ERREUR: {e}")
    except Exception as e:
        print(f"‚ö†Ô∏è  {lib_name:<15} - ATTENTION: {e}")

print(f"\n=== R√©sultat: {success_count}/{total_count} biblioth√®ques install√©es ===")

# Test rapide de fonctionnalit√©
if success_count == total_count:
    print("\nüéâ Excellent! Toutes les biblioth√®ques sont pr√™tes!")
    print("Vous pouvez maintenant commencer le d√©veloppement de l'agent.")
    
    # Test rapide de psutil
    try:
        import psutil
        print(f"\nüìä Test rapide - Processus actifs: {len(psutil.pids())}")
        print(f"üìä Utilisation CPU: {psutil.cpu_percent()}%")
        print(f"üìä Utilisation RAM: {psutil.virtual_memory().percent}%")
    except:
        pass
else:
    print(f"\n‚ö†Ô∏è  {total_count - success_count} biblioth√®que(s) manquante(s)")
    print("V√©rifiez votre environnement virtuel et r√©installez si n√©cessaire.")

print(f"\nüêç Version Python: {sys.version}")
print(f"üìÅ Environnement: {sys.executable}")